#!/usr/bin/env bash

# exit when any command fails
set -e

# ----------------------------------
# Colors
# ----------------------------------
NOCOLOR='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'


# ----------------------------------
# Fetching
# ----------------------------------

# fetch origin
git fetch origin


# ----------------------------------
# Pre-checks
# ----------------------------------

# autodetect main branch (usually master or main)
mainBranch=$(git remote show origin | grep "HEAD branch" | cut -d' ' -f5)

# check if a commit was not pushed in main branch
logs=$(git log origin/main..main --pretty="tformat:%Cred%h %Creset %C(green)%cr %C(magenta)%an %Creset%s %C(yellow)%d%Creset")

if [[ "$logs" != "" ]]; then
  echo -e "${ORANGE}Commit was added to main you might want to push it or move it to a branch before resetting main branch:${NOCOLOR}"
  echo "$logs"
  exit 1
fi


if [[ "$mainBranch" != "main" ]]; then
  echo "autodetect main branch: $mainBranch"
fi

# ----------------------------------
# Resetting main branch
# ----------------------------------

git checkout -B "$mainBranch" "origin/$mainBranch"
